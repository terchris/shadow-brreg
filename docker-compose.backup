# runs postgres in docker connecting to the port 5433 so that it does not interfere with other postgres instances
# start this with docker compose up -d
version: '3.8'
services:
  db:
    container_name: shadow-brreg
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
    - "5433" 
    ports:
      - '5433:5433'
    volumes: 
      - db:/var/lib/postgresql/data
    command: -p 5433
  app:
    container_name: shadow-app
    image: node:lts-alpine
    restart: always
    depends_on:
      - db
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    command: sh -c "apk add --no-cache cron && echo \"*/10 * * * * /usr/src/app/your-script.sh\" >> /etc/crontabs/root && crond -f"    
volumes:
  db:
    driver: local

